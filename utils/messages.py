class Messages:
    hello_message = "Здравствуй, {name}, я бот, которому вы можете задавать вопросы, касающиеся профсоюзной " \
                    "организации ЮУрГУ. Перед тем как задать свой вопрос, посмотрите, может ответ уже есть в меню. " \
                    "Для этого выберете интересующую вас тему из представленных. Если это не решило ваш вопрос, " \
                    "то нажмите на кнопку \"Задать вопрос\" и напишите, что вас интересует."
    set_question = "Ваш вопрос зарегистрирован!"
    err_question = "Пожалуйста введите вопрос!"
    want_to_ask = ["Если вы хотите задать вопрос специалисту, то, пожалуйста, нажмите на кнопку \"Задать вопрос\"",
                   "Чтобы задать вопрос специалисту, нажмите кнопку \"Задать вопрос\"",
                   "Специалисты не увидят ваш вопрос, если вы зададите его без нажатия на кнопку \"Задать вопрос\"",
                   "К сожалению, я не могу зарегистрировать ваш вопрос без нажатия на кнопку \"Задать вопрос\""]
    enter_hashtag = "Введите хэштег, на который хотите подписаться ( #пример ): "
    enter_n_hashtag = "Введите номер хештега, который хотите удалить из подписок: "
    enter_question = "Впишите ваш вопрос и на него обязательно ответят специалисты. "
    already_important = "Ваш вопрос уже зарегистрирован. Вы можете его дополнить, просто отправив мне сообщение."
    close_question = "Хорошо, я закрыл вопрос! Чтобы открыть новый нужно нажать на кнопку \"Задать вопрос\""
    stay_question = "Хорошо, вопрос остается открытым"
    no_hashtag = "Хэштег с таким номером не найден в подписках!"
    done = "Готово"
    enter_number = "Введите число"
    new_post = "Новый пост!"
    cancel = "Возвращаюсь"

    @staticmethod
    def gettext(kb_id: str, txt_id: int) -> str:
        with open(f'texts/{kb_id}/{txt_id}.txt', 'r', encoding='utf-8') as file:
            message = file.read()
            file.close()
            return message
